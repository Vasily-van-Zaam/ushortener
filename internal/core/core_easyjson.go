// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package core

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore(in *jlexer.Lexer, out *User) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore(out *jwriter.Writer, in User) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.ID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v User) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v User) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *User) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *User) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore1(in *jlexer.Lexer, out *ResponseAPIUserURL) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "short_url":
			out.ShortURL = string(in.String())
		case "original_url":
			out.OriginalURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore1(out *jwriter.Writer, in ResponseAPIUserURL) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"short_url\":"
		out.RawString(prefix[1:])
		out.String(string(in.ShortURL))
	}
	{
		const prefix string = ",\"original_url\":"
		out.RawString(prefix)
		out.String(string(in.OriginalURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseAPIUserURL) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseAPIUserURL) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseAPIUserURL) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseAPIUserURL) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore1(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore2(in *jlexer.Lexer, out *ResponseAPIShortenBatch) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "correlation_id":
			out.CorrelationID = string(in.String())
		case "short_url":
			out.ShortURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore2(out *jwriter.Writer, in ResponseAPIShortenBatch) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"correlation_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.CorrelationID))
	}
	{
		const prefix string = ",\"short_url\":"
		out.RawString(prefix)
		out.String(string(in.ShortURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseAPIShortenBatch) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseAPIShortenBatch) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseAPIShortenBatch) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseAPIShortenBatch) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore2(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore3(in *jlexer.Lexer, out *ResponseAPIShorten) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore3(out *jwriter.Writer, in ResponseAPIShorten) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.String(string(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResponseAPIShorten) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResponseAPIShorten) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResponseAPIShorten) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResponseAPIShorten) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore3(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore4(in *jlexer.Lexer, out *RequestAPIShortenBatch) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "correlation_id":
			out.CorrelationID = string(in.String())
		case "original_url":
			out.OriginalURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore4(out *jwriter.Writer, in RequestAPIShortenBatch) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"correlation_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.CorrelationID))
	}
	{
		const prefix string = ",\"original_url\":"
		out.RawString(prefix)
		out.String(string(in.OriginalURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RequestAPIShortenBatch) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RequestAPIShortenBatch) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RequestAPIShortenBatch) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RequestAPIShortenBatch) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore4(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore5(in *jlexer.Lexer, out *RequestAPIShorten) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore5(out *jwriter.Writer, in RequestAPIShorten) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"url\":"
		out.RawString(prefix[1:])
		out.String(string(in.URL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RequestAPIShorten) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RequestAPIShorten) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RequestAPIShorten) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RequestAPIShorten) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore5(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore6(in *jlexer.Lexer, out *Link) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int(in.Int())
		case "link":
			out.Link = string(in.String())
		case "short_link":
			out.ShortLink = string(in.String())
		case "uuid":
			out.UUID = string(in.String())
		case "user_id":
			out.UserID = int(in.Int())
		case "deleted":
			out.Deleted = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore6(out *jwriter.Writer, in Link) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int(int(in.ID))
	}
	{
		const prefix string = ",\"link\":"
		out.RawString(prefix)
		out.String(string(in.Link))
	}
	{
		const prefix string = ",\"short_link\":"
		out.RawString(prefix)
		out.String(string(in.ShortLink))
	}
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix)
		out.String(string(in.UUID))
	}
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.Int(int(in.UserID))
	}
	{
		const prefix string = ",\"deleted\":"
		out.RawString(prefix)
		out.Bool(bool(in.Deleted))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Link) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Link) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Link) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Link) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore6(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore7(in *jlexer.Lexer, out *ErrConflict) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore7(out *jwriter.Writer, in ErrConflict) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ErrConflict) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ErrConflict) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ErrConflict) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ErrConflict) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore7(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore8(in *jlexer.Lexer, out *Config) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ServerAddress":
			out.ServerAddress = string(in.String())
		case "BaseURL":
			out.BaseURL = string(in.String())
		case "Filestore":
			out.Filestore = string(in.String())
		case "SqliteDB":
			out.SqliteDB = string(in.String())
		case "ServerTimeout":
			out.ServerTimeout = int64(in.Int64())
		case "ExpiresDayCookie":
			out.ExpiresDayCookie = int64(in.Int64())
		case "SecretKey":
			out.SecretKey = string(in.String())
		case "DataBaseDNS":
			out.DataBaseDNS = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore8(out *jwriter.Writer, in Config) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ServerAddress\":"
		out.RawString(prefix[1:])
		out.String(string(in.ServerAddress))
	}
	{
		const prefix string = ",\"BaseURL\":"
		out.RawString(prefix)
		out.String(string(in.BaseURL))
	}
	{
		const prefix string = ",\"Filestore\":"
		out.RawString(prefix)
		out.String(string(in.Filestore))
	}
	{
		const prefix string = ",\"SqliteDB\":"
		out.RawString(prefix)
		out.String(string(in.SqliteDB))
	}
	{
		const prefix string = ",\"ServerTimeout\":"
		out.RawString(prefix)
		out.Int64(int64(in.ServerTimeout))
	}
	{
		const prefix string = ",\"ExpiresDayCookie\":"
		out.RawString(prefix)
		out.Int64(int64(in.ExpiresDayCookie))
	}
	{
		const prefix string = ",\"SecretKey\":"
		out.RawString(prefix)
		out.String(string(in.SecretKey))
	}
	{
		const prefix string = ",\"DataBaseDNS\":"
		out.RawString(prefix)
		out.String(string(in.DataBaseDNS))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Config) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Config) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Config) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Config) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore8(l, v)
}
func easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore9(in *jlexer.Lexer, out *BuferDeleteURL) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "IDS":
			if in.IsNull() {
				in.Skip()
				out.IDS = nil
			} else {
				in.Delim('[')
				if out.IDS == nil {
					if !in.IsDelim(']') {
						out.IDS = make([]*string, 0, 8)
					} else {
						out.IDS = []*string{}
					}
				} else {
					out.IDS = (out.IDS)[:0]
				}
				for !in.IsDelim(']') {
					var v1 *string
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(string)
						}
						*v1 = string(in.String())
					}
					out.IDS = append(out.IDS, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "User":
			if in.IsNull() {
				in.Skip()
				out.User = nil
			} else {
				if out.User == nil {
					out.User = new(User)
				}
				(*out.User).UnmarshalEasyJSON(in)
			}
		case "Ctx":
			if m, ok := out.Ctx.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := out.Ctx.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				out.Ctx = in.Interface()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore9(out *jwriter.Writer, in BuferDeleteURL) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"IDS\":"
		out.RawString(prefix[1:])
		if in.IDS == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.IDS {
				if v2 > 0 {
					out.RawByte(',')
				}
				if v3 == nil {
					out.RawString("null")
				} else {
					out.String(string(*v3))
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"User\":"
		out.RawString(prefix)
		if in.User == nil {
			out.RawString("null")
		} else {
			(*in.User).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"Ctx\":"
		out.RawString(prefix)
		if m, ok := in.Ctx.(easyjson.Marshaler); ok {
			m.MarshalEasyJSON(out)
		} else if m, ok := in.Ctx.(json.Marshaler); ok {
			out.Raw(m.MarshalJSON())
		} else {
			out.Raw(json.Marshal(in.Ctx))
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BuferDeleteURL) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BuferDeleteURL) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3d34c335EncodeGithubComVasilyVanZaamUshortenerInternalCore9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BuferDeleteURL) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BuferDeleteURL) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3d34c335DecodeGithubComVasilyVanZaamUshortenerInternalCore9(l, v)
}
